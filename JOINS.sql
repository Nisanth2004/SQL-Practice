

# INNER JOIN
/*
SELECT COLUMN_NAME(S)
FROM TABLE1 INNER JOIN TABLE2
ON TALE1.COLUMN_NAME=TABLE2.COLUMN_NAME

*/

USE PLANETARYGOODS;

-- FIRSTNAME,LASTNAME,ORDERID
SELECT FIRSTNAME,LASTNAME,ORDERID FROM CUSTOMERS INNER JOIN ORDERS 
ON CUSTOMERS.CUSTOMERID=ORDERS.CUSTOMERID;

-- aliases at table level
SELECT C.FIRSTNAME,C.LASTNAME,O.ORDERID 
FROM CUSTOMERS C
INNER JOIN ORDERS O
ON C.CUSTOMERID=O.CUSTOMERID;

-- -------------------------------------------------------------
# Inner join with Multiple tables


-- CUSTOMERS, ORDERS, ORDERDETAILS, PRODUCT

SELECT C.FIRSTNAME,
		C.LASTNAME,
        P.PRODUCTNAME,
        SUM(OD.QUANTITY) AS TOTALQUANTITY
FROM CUSTOMERS C
	INNER JOIN ORDERS O ON C.CUSTOMERID = O.CUSTOMERID
    INNER JOIN ORDERDETAILS OD ON O.ORDERID = OD.ORDERID
    INNER JOIN PRODUCTS P ON OD.PRODUCTID = P.PRODUCTID
    GROUP BY C.FIRSTNAME, C.LASTNAME, P.PRODUCTNAME;
    
-- Sales Volume: Genrate a report that shows the name and total order amount for each product sold.

# PRODUCTID,PRODUCTNAME,TOTAL ORDER AMOUNT

SELECT P.PRODUCTNAME,P.PRODUCTID,
       SUM(OD.FINALTOTAL) AS TOTALORDERAMOUNT
FROM ORDERDETAILS AS OD
	INNER JOIN PRODUCTS P ON OD.PRODUCTID=P.PRODUCTID
    GROUP BY P.PRODUCTID,P.PRODUCTNAME
    ;
-- -------------------------------------------------------------

# LEFT JOIN

SELECT C.CUSTOMERID,C.FIRSTNAME,C.LASTNAME,O.ORDERID
FROM CUSTOMERS C
INNER JOIN ORDERS O
ON C.CUSTOMERID=O.CUSTOMERID;


SELECT C.CUSTOMERID,C.FIRSTNAME,C.LASTNAME,O.ORDERID
FROM CUSTOMERS C
LEFT JOIN ORDERS O
ON C.CUSTOMERID=O.CUSTOMERID;


/*
Product Sales Analysis: We are designing our inventory for the 
next season. To make informed decisions, we need to know the 
total quantity of each product ordered. 

Additionally, it's essential to identify products that have never 
been ordered so we can reconsider their marketing or placement. 
*/

-- PRODUCTID, PRODUCTNAME, TOTAL_QUANTITY_ORDERED

SELECT P.PRODUCTID, 
	P.PRODUCTNAME, 
    COALESCE(SUM(QUANTITY), 0) AS TOTAL_QUANTITY_ORDERED
FROM PRODUCTS P 
LEFT JOIN ORDERDETAILS OD ON P.PRODUCTID = OD.PRODUCTID
GROUP BY P.PRODUCTID, P.PRODUCTNAME
ORDER BY TOTAL_QUANTITY_ORDERED DESC;







